import sys, types, os;has_mfs = sys.version_info > (3, 5);p = os.path.join(sys._getframe(1).f_locals['sitedir'], *('ninja_ide',));importlib = has_mfs and __import__('importlib.util');has_mfs and __import__('importlib.machinery');m = has_mfs and sys.modules.setdefault('ninja_ide', importlib.util.module_from_spec(importlib.machinery.PathFinder.find_spec('ninja_ide', [os.path.dirname(p)])));m = m or sys.modules.setdefault('ninja_ide', types.ModuleType('ninja_ide'));mp = (m or []) and m.__dict__.setdefault('__path__',[]);(p not in mp) and mp.append(p)
import sys, types, os;has_mfs = sys.version_info > (3, 5);p = os.path.join(sys._getframe(1).f_locals['sitedir'], *('ninja_ide',));importlib = has_mfs and __import__('importlib.util');has_mfs and __import__('importlib.machinery');m = has_mfs and sys.modules.setdefault('ninja_ide', importlib.util.module_from_spec(importlib.machinery.PathFinder.find_spec('ninja_ide', [os.path.dirname(p)])));m = m or sys.modules.setdefault('ninja_ide', types.ModuleType('ninja_ide'));mp = (m or []) and m.__dict__.setdefault('__path__',[]);(p not in mp) and mp.append(p)
import sys, types, os;has_mfs = sys.version_info > (3, 5);p = os.path.join(sys._getframe(1).f_locals['sitedir'], *('ninja_ide',));importlib = has_mfs and __import__('importlib.util');has_mfs and __import__('importlib.machinery');m = has_mfs and sys.modules.setdefault('ninja_ide', importlib.util.module_from_spec(importlib.machinery.PathFinder.find_spec('ninja_ide', [os.path.dirname(p)])));m = m or sys.modules.setdefault('ninja_ide', types.ModuleType('ninja_ide'));mp = (m or []) and m.__dict__.setdefault('__path__',[]);(p not in mp) and mp.append(p)
import sys, types, os;has_mfs = sys.version_info > (3, 5);p = os.path.join(sys._getframe(1).f_locals['sitedir'], *('ninja_ide', 'contrib'));importlib = has_mfs and __import__('importlib.util');has_mfs and __import__('importlib.machinery');m = has_mfs and sys.modules.setdefault('ninja_ide.contrib', importlib.util.module_from_spec(importlib.machinery.PathFinder.find_spec('ninja_ide.contrib', [os.path.dirname(p)])));m = m or sys.modules.setdefault('ninja_ide.contrib', types.ModuleType('ninja_ide.contrib'));mp = (m or []) and m.__dict__.setdefault('__path__',[]);(p not in mp) and mp.append(p);m and setattr(sys.modules['ninja_ide'], 'contrib', m)
import sys, types, os;has_mfs = sys.version_info > (3, 5);p = os.path.join(sys._getframe(1).f_locals['sitedir'], *('ninja_ide', 'contrib'));importlib = has_mfs and __import__('importlib.util');has_mfs and __import__('importlib.machinery');m = has_mfs and sys.modules.setdefault('ninja_ide.contrib', importlib.util.module_from_spec(importlib.machinery.PathFinder.find_spec('ninja_ide.contrib', [os.path.dirname(p)])));m = m or sys.modules.setdefault('ninja_ide.contrib', types.ModuleType('ninja_ide.contrib'));mp = (m or []) and m.__dict__.setdefault('__path__',[]);(p not in mp) and mp.append(p);m and setattr(sys.modules['ninja_ide'], 'contrib', m)
import sys, types, os;has_mfs = sys.version_info > (3, 5);p = os.path.join(sys._getframe(1).f_locals['sitedir'], *('ninja_ide', 'contrib', 'plugins'));importlib = has_mfs and __import__('importlib.util');has_mfs and __import__('importlib.machinery');m = has_mfs and sys.modules.setdefault('ninja_ide.contrib.plugins', importlib.util.module_from_spec(importlib.machinery.PathFinder.find_spec('ninja_ide.contrib.plugins', [os.path.dirname(p)])));m = m or sys.modules.setdefault('ninja_ide.contrib.plugins', types.ModuleType('ninja_ide.contrib.plugins'));mp = (m or []) and m.__dict__.setdefault('__path__',[]);(p not in mp) and mp.append(p);m and setattr(sys.modules['ninja_ide.contrib'], 'plugins', m)
